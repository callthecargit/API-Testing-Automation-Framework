17:55:15.744 [main] ERROR com.intuit.karate.core.FeatureParser - syntax error: mismatched input '{' expecting <EOF>
17:55:15.754 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: classpath:features/demoTest/demo1.feature - mismatched input '{' expecting <EOF>
17:57:26.870 [main] ERROR com.intuit.karate.core.FeatureParser - syntax error: mismatched input '{' expecting <EOF>
17:57:26.878 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: classpath:features/demoTest/demo1.feature - mismatched input '{' expecting <EOF>
18:00:06.071 [main] INFO  com.intuit.karate - karate.env system property was:  
18:00:07.012 [main] DEBUG com.intuit.karate - request:
1 > POST https://dummyjson.com/auth/login
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 88
1 > Content-Type: application/json; charset=UTF-8
1 > Host: dummyjson.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)
{"username":"emilys","password":"emilyspass","expiresInMins":30,"credentials":"include"}

18:00:08.097 [main] DEBUG com.intuit.karate - response time in milliseconds: 1081.87
1 < 200
1 < Access-Control-Allow-Origin: *
1 < Connection: keep-alive
1 < Content-Length: 930
1 < Content-Type: application/json; charset=utf-8
1 < Date: Thu, 17 Oct 2024 12:30:07 GMT
1 < Etag: W/"3a2-J8OWGH8ESmuCCZk9CaFp04VL1qI"
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1729168207&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=Ih5plvgpjU4jH7cQ8I08KlDdS6wyIfnx%2FDYQSgop6SU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1729168207&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=Ih5plvgpjU4jH7cQ8I08KlDdS6wyIfnx%2FDYQSgop6SU%3D
1 < Server: BobTheBuilder
1 < Set-Cookie: [accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3MjkxNjgyMDcsImV4cCI6MTcyOTE3MDAwN30.0jX2qgCs6hUo5viulixxAVxNaqF-VN6P6LWng1tJEPs; Max-Age=1800; Path=/; Expires=Thu, 17 Oct 2024 13:00:07 GMT; HttpOnly; Secure, refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3MjkxNjgyMDcsImV4cCI6MTczMTc2MDIwN30.4S_b5ATQH528IvhT_oJYIo1lRdg3mLt5LqA7EP8Yf7A; Max-Age=1800; Path=/; Expires=Thu, 17 Oct 2024 13:00:07 GMT; HttpOnly; Secure]
1 < Strict-Transport-Security: max-age=15552000; includeSubDomains
1 < Vary: Accept-Encoding
1 < Via: 1.1 vegur
1 < X-Content-Type-Options: nosniff
1 < X-Dns-Prefetch-Control: off
1 < X-Download-Options: noopen
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: Cats on Keyboards
1 < X-Ratelimit-Limit: 100
1 < X-Ratelimit-Remaining: 99
1 < X-Ratelimit-Reset: 1729168218
1 < X-Xss-Protection: 1; mode=block
{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3MjkxNjgyMDcsImV4cCI6MTcyOTE3MDAwN30.0jX2qgCs6hUo5viulixxAVxNaqF-VN6P6LWng1tJEPs","refreshToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJlbWlseXMiLCJlbWFpbCI6ImVtaWx5LmpvaG5zb25AeC5kdW1teWpzb24uY29tIiwiZmlyc3ROYW1lIjoiRW1pbHkiLCJsYXN0TmFtZSI6IkpvaG5zb24iLCJnZW5kZXIiOiJmZW1hbGUiLCJpbWFnZSI6Imh0dHBzOi8vZHVtbXlqc29uLmNvbS9pY29uL2VtaWx5cy8xMjgiLCJpYXQiOjE3MjkxNjgyMDcsImV4cCI6MTczMTc2MDIwN30.4S_b5ATQH528IvhT_oJYIo1lRdg3mLt5LqA7EP8Yf7A","id":1,"username":"emilys","email":"emily.johnson@x.dummyjson.com","firstName":"Emily","lastName":"Johnson","gender":"female","image":"https://dummyjson.com/icon/emilys/128"}

11:50:16.259 [main] INFO  com.intuit.karate - karate.env system property was:  
12:12:44.271 [main] INFO  com.intuit.karate - karate.env system property was:  
12:12:45.098 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:12:46.601 [main] DEBUG com.intuit.karate - response time in milliseconds: 1500.76
1 < 302
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 0
1 < Date: Mon, 21 Oct 2024 06:42:45 GMT
1 < Expires: -1
1 < Location: https://ccerrts-dev.callthecar.com/Account/Login?ReturnUrl=%2FMember%2FMember%2FMemberSearchPanel%3FMemberID%3DzTestMember
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: ASP.NET_SessionId=nqjk4yslahefuqkdsv0ij5lu; path=/; HttpOnly; SameSite=Lax
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET

12:12:46.609 [main] DEBUG com.intuit.karate - request:
2 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember
2 > Accept-Encoding: gzip,deflate
2 > Connection: Keep-Alive
2 > Cookie: ASP.NET_SessionId=nqjk4yslahefuqkdsv0ij5lu
2 > Host: ccerrts-dev.callthecar.com
2 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:12:46.866 [main] DEBUG com.intuit.karate - response time in milliseconds: 255.58
2 < 200
2 < Access-Control-Expose-Headers: Request-Context
2 < Cache-Control: no-cache, no-store
2 < Content-Type: text/html; charset=utf-8
2 < Date: Mon, 21 Oct 2024 06:42:45 GMT
2 < Expires: -1
2 < Pragma: no-cache
2 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
2 < Server: Microsoft-IIS/10.0
2 < Vary: Accept-Encoding
2 < X-AspNet-Version: 4.0.30319
2 < X-AspNetMvc-Version: 5.2
2 < X-Frame-Options: SAMEORIGIN
2 < X-Powered-By: ASP.NET
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>

    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Log in - Call The Car</title>
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile Specific Metas
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
        ================================================== -->
    <link href="/Content/style.css" rel="stylesheet"/>

    
    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">
    <!-- JS
     ================================================== -->
    
    <style>
        html, body {
            height: 100%;
        }
    </style>
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .logoclass {
            height: 180px;
            margin-top: 1px;
            margin-left: 69px;
        }
    </style>
</head>
<body class="login-page">
    <!--Strat Main Container-->
    <!--Start login wrapper-->
    <div id="log-wrapper">

        <div class="clearfix">
            <!--<img src="~/Content/Images/loginlogonew.png" class="logoclass" />-->
            <div id="root"></div>
            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<style type="text/css">
    /* Styles for validation helpers*/
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: #ffeeee !important;
    }

    .validation-summary-errors {
        font-weight: bold !important;
        color: #ff0000 !important;
        font-size: 11px !important;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

<!--<div class="login-box">
    
    
<form action="/?ReturnUrl=%2FMember%2FMember%2FMemberSearchPanel%3FMemberID%3DzTestMember" class="login-form" method="post" role="form">        <div class="form-group inner-addon right-addon mgn-T-20">
            <i class="fa fa-user"></i>
            <input class="form-control" data-val="true" data-val-required="The UserName field is required." id="UserName" name="UserName" placeholder="User Name" type="text" value="" />
            <span class="field-validation-valid text-danger" data-valmsg-for="UserName" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group inner-addon right-addon">
            <i class="fa fa-unlock-alt"></i>
            <input class="form-control" data-val="true" data-val-required="The Password field is required." id="Password" name="Password" placeholder="Password" type="password" />
            <span class="field-validation-valid text-danger" data-valmsg-for="Password" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            
        </div>
        <div class="form-group">
            <input type="submit" id="btnLogin" value="Log in" class="btn btn-default login-btn" />
        </div>
        <div class="checkbox">
            
            <span class="pull-right"><a href="/Account/ForgotPassword">Forgot your password?</a></span>
        </div>
</form>
</div>
    -->
<!-- Modal -->

<style type="text/css">
    .radio, .checkbox {
        margin-top: -10px;
    }

    .customfooter {
        position: absolute;
        bottom: 30px;
        width: 100%;
    }

    .textlogo {
        margin-top: 28px;
        font-weight: bold;
        color: #3b537a;
        padding-left: 86px;
    }

    .login-wrapper .login-btn {
        margin-top: -10px;
    }

    .logoclass1 {
        height: 40px !important;
        width: 222px;
        margin-top: 20px;
        margin-left: -27px;
    }
</style>


        </div>
    </div>



    <script src="/Scripts/dist/index.js"></script>

    <!--end login wrapper-->
    <!--End Main container-->
    <!-- All Javascript include here for fast loading of page -->
    <!--<script src="~/Scripts/app.min.js"></script>-->

    
</body>
</html>


12:12:46.880 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 55; columnNumber: 3; The element type "link" must be terminated by the matching end-tag "</link>".
12:33:30.771 [main] INFO  com.intuit.karate - karate.env system property was:  
12:33:32.084 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=243553
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:33:33.334 [main] DEBUG com.intuit.karate - response time in milliseconds: 1247.94
1 < 302
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 0
1 < Date: Mon, 21 Oct 2024 07:03:32 GMT
1 < Expires: -1
1 < Location: https://ccerrts-dev.callthecar.com/Account/Login?ReturnUrl=%2FMember%2FMember%2FMemberSearchPanel%3FMemberID%3D243553
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: ASP.NET_SessionId=rkagsfamfdy4y4rtcq11ntyo; path=/; HttpOnly; SameSite=Lax
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET

12:33:33.344 [main] DEBUG com.intuit.karate - request:
2 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=243553
2 > Accept-Encoding: gzip,deflate
2 > Connection: Keep-Alive
2 > Cookie: ASP.NET_SessionId=rkagsfamfdy4y4rtcq11ntyo
2 > Host: ccerrts-dev.callthecar.com
2 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:33:33.614 [main] DEBUG com.intuit.karate - response time in milliseconds: 268.38
2 < 200
2 < Access-Control-Expose-Headers: Request-Context
2 < Cache-Control: no-cache, no-store
2 < Content-Type: text/html; charset=utf-8
2 < Date: Mon, 21 Oct 2024 07:03:32 GMT
2 < Expires: -1
2 < Pragma: no-cache
2 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
2 < Server: Microsoft-IIS/10.0
2 < Vary: Accept-Encoding
2 < X-AspNet-Version: 4.0.30319
2 < X-AspNetMvc-Version: 5.2
2 < X-Frame-Options: SAMEORIGIN
2 < X-Powered-By: ASP.NET
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>

    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Log in - Call The Car</title>
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile Specific Metas
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
        ================================================== -->
    <link href="/Content/style.css" rel="stylesheet"/>

    
    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">
    <!-- JS
     ================================================== -->
    
    <style>
        html, body {
            height: 100%;
        }
    </style>
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .logoclass {
            height: 180px;
            margin-top: 1px;
            margin-left: 69px;
        }
    </style>
</head>
<body class="login-page">
    <!--Strat Main Container-->
    <!--Start login wrapper-->
    <div id="log-wrapper">

        <div class="clearfix">
            <!--<img src="~/Content/Images/loginlogonew.png" class="logoclass" />-->
            <div id="root"></div>
            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<style type="text/css">
    /* Styles for validation helpers*/
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: #ffeeee !important;
    }

    .validation-summary-errors {
        font-weight: bold !important;
        color: #ff0000 !important;
        font-size: 11px !important;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

<!--<div class="login-box">
    
    
<form action="/?ReturnUrl=%2FMember%2FMember%2FMemberSearchPanel%3FMemberID%3D243553" class="login-form" method="post" role="form">        <div class="form-group inner-addon right-addon mgn-T-20">
            <i class="fa fa-user"></i>
            <input class="form-control" data-val="true" data-val-required="The UserName field is required." id="UserName" name="UserName" placeholder="User Name" type="text" value="" />
            <span class="field-validation-valid text-danger" data-valmsg-for="UserName" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group inner-addon right-addon">
            <i class="fa fa-unlock-alt"></i>
            <input class="form-control" data-val="true" data-val-required="The Password field is required." id="Password" name="Password" placeholder="Password" type="password" />
            <span class="field-validation-valid text-danger" data-valmsg-for="Password" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            
        </div>
        <div class="form-group">
            <input type="submit" id="btnLogin" value="Log in" class="btn btn-default login-btn" />
        </div>
        <div class="checkbox">
            
            <span class="pull-right"><a href="/Account/ForgotPassword">Forgot your password?</a></span>
        </div>
</form>
</div>
    -->
<!-- Modal -->

<style type="text/css">
    .radio, .checkbox {
        margin-top: -10px;
    }

    .customfooter {
        position: absolute;
        bottom: 30px;
        width: 100%;
    }

    .textlogo {
        margin-top: 28px;
        font-weight: bold;
        color: #3b537a;
        padding-left: 86px;
    }

    .login-wrapper .login-btn {
        margin-top: -10px;
    }

    .logoclass1 {
        height: 40px !important;
        width: 222px;
        margin-top: 20px;
        margin-left: -27px;
    }
</style>


        </div>
    </div>



    <script src="/Scripts/dist/index.js"></script>

    <!--end login wrapper-->
    <!--End Main container-->
    <!-- All Javascript include here for fast loading of page -->
    <!--<script src="~/Scripts/app.min.js"></script>-->

    
</body>
</html>


12:33:33.623 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 55; columnNumber: 3; The element type "link" must be terminated by the matching end-tag "</link>".
12:34:09.495 [main] INFO  com.intuit.karate - karate.env system property was:  
12:34:10.365 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:34:11.561 [main] DEBUG com.intuit.karate - response time in milliseconds: 1194.97
1 < 302
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 0
1 < Date: Mon, 21 Oct 2024 07:04:09 GMT
1 < Expires: -1
1 < Location: https://ccerrts-dev.callthecar.com/Account/Login?ReturnUrl=%2FMember%2FMember%2FMemberSearchPanel%3FMemberID%3DzTestMember
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: ASP.NET_SessionId=lobbnsteykehbvx2033wga2u; path=/; HttpOnly; SameSite=Lax
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET

12:34:11.567 [main] DEBUG com.intuit.karate - request:
2 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember
2 > Accept-Encoding: gzip,deflate
2 > Connection: Keep-Alive
2 > Cookie: ASP.NET_SessionId=lobbnsteykehbvx2033wga2u
2 > Host: ccerrts-dev.callthecar.com
2 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:34:11.837 [main] DEBUG com.intuit.karate - response time in milliseconds: 267.03
2 < 200
2 < Access-Control-Expose-Headers: Request-Context
2 < Cache-Control: no-cache, no-store
2 < Content-Type: text/html; charset=utf-8
2 < Date: Mon, 21 Oct 2024 07:04:10 GMT
2 < Expires: -1
2 < Pragma: no-cache
2 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
2 < Server: Microsoft-IIS/10.0
2 < Vary: Accept-Encoding
2 < X-AspNet-Version: 4.0.30319
2 < X-AspNetMvc-Version: 5.2
2 < X-Frame-Options: SAMEORIGIN
2 < X-Powered-By: ASP.NET
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>

    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Log in - Call The Car</title>
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile Specific Metas
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
        ================================================== -->
    <link href="/Content/style.css" rel="stylesheet"/>

    
    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">
    <!-- JS
     ================================================== -->
    
    <style>
        html, body {
            height: 100%;
        }
    </style>
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .logoclass {
            height: 180px;
            margin-top: 1px;
            margin-left: 69px;
        }
    </style>
</head>
<body class="login-page">
    <!--Strat Main Container-->
    <!--Start login wrapper-->
    <div id="log-wrapper">

        <div class="clearfix">
            <!--<img src="~/Content/Images/loginlogonew.png" class="logoclass" />-->
            <div id="root"></div>
            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<style type="text/css">
    /* Styles for validation helpers*/
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: #ffeeee !important;
    }

    .validation-summary-errors {
        font-weight: bold !important;
        color: #ff0000 !important;
        font-size: 11px !important;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

<!--<div class="login-box">
    
    
<form action="/?ReturnUrl=%2FMember%2FMember%2FMemberSearchPanel%3FMemberID%3DzTestMember" class="login-form" method="post" role="form">        <div class="form-group inner-addon right-addon mgn-T-20">
            <i class="fa fa-user"></i>
            <input class="form-control" data-val="true" data-val-required="The UserName field is required." id="UserName" name="UserName" placeholder="User Name" type="text" value="" />
            <span class="field-validation-valid text-danger" data-valmsg-for="UserName" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group inner-addon right-addon">
            <i class="fa fa-unlock-alt"></i>
            <input class="form-control" data-val="true" data-val-required="The Password field is required." id="Password" name="Password" placeholder="Password" type="password" />
            <span class="field-validation-valid text-danger" data-valmsg-for="Password" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            
        </div>
        <div class="form-group">
            <input type="submit" id="btnLogin" value="Log in" class="btn btn-default login-btn" />
        </div>
        <div class="checkbox">
            
            <span class="pull-right"><a href="/Account/ForgotPassword">Forgot your password?</a></span>
        </div>
</form>
</div>
    -->
<!-- Modal -->

<style type="text/css">
    .radio, .checkbox {
        margin-top: -10px;
    }

    .customfooter {
        position: absolute;
        bottom: 30px;
        width: 100%;
    }

    .textlogo {
        margin-top: 28px;
        font-weight: bold;
        color: #3b537a;
        padding-left: 86px;
    }

    .login-wrapper .login-btn {
        margin-top: -10px;
    }

    .logoclass1 {
        height: 40px !important;
        width: 222px;
        margin-top: 20px;
        margin-left: -27px;
    }
</style>


        </div>
    </div>



    <script src="/Scripts/dist/index.js"></script>

    <!--end login wrapper-->
    <!--End Main container-->
    <!-- All Javascript include here for fast loading of page -->
    <!--<script src="~/Scripts/app.min.js"></script>-->

    
</body>
</html>


12:34:11.849 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 55; columnNumber: 3; The element type "link" must be terminated by the matching end-tag "</link>".
12:35:24.438 [main] INFO  com.intuit.karate - karate.env system property was:  
12:35:25.833 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:35:28.386 [main] DEBUG com.intuit.karate - response time in milliseconds: 2107.36
1 < 500
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 63759
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 22 Oct 2024 07:05:27 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=21JRWNHYzyJtml1-xS_gsuJ9tbiTZ08UB4Z1H5B347XMN0CxDDkV515p4FulYcAb6QAhVW7vumC5Yy7VFy426riif6KjRPpztxNtxUy5a4oAogiuyLQO1OPklV92wOVjWAJaKE2R8VuKfKpy0e9KhDOb-2zJs6er1yZfgIjwrg1rZ5m1nO2ztXWOHMmF_La0ZXE9SrHPL9Pl0GVb_8cfBqOAkKmWllqPSOplkFWYpz5e_aFo4wxwv3OwLwLSwfJQatd0My7Zf8F87i_mnz1JJiGc_gh6rTFOpmw9dZWg41WvpyBuM8jeuePV9Ptvf46lEBB4vzL0oQJtUmyWyzHSZv96PSrSk8mgH2d-utxiLfhBGS5UUM0TllWaM8wQV4Yw6W2pX7IUvMgVecDpUOoHg6M4ZBjlUKXaQGQZa3-tgatHuHrzQkZKfDhVSvlze0Y18X19XHlId9y_L4R20O90nnC1E-_mgFhz-cv6ivG5TTalC1OdmWFcFKaJFYT_SkqnaH7pH0I30AXkNV33PZjurVQZc3Vp1d7V3DWrsYkT_6pncRTKVN-gRBHYQqrSAKWbR5rL53W2wY-VUz4iFvsF3w; path=/; secure; HttpOnly
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
<!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:05:27';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:05:27';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:05:27';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>


12:35:28.421 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 17; columnNumber: 36; The string "--" is not permitted within comments.
12:35:28.425 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 2107, url: https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember, response: <!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:05:27';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:05:27';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:05:27';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>

12:37:58.440 [main] INFO  com.intuit.karate - karate.env system property was:  
12:38:00.269 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=20
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:38:08.616 [main] DEBUG com.intuit.karate - response time in milliseconds: 7913.42
1 < 500
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 63759
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 22 Oct 2024 07:08:06 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=ljEodtooYq20Cu9zrglI3bW6vaFipM1xEnJli9q92XDsvsDp4X19f0KEK4UEPpYAYsw1M1Uf7PEZEU73rmzrPWjqEMJr03TOwHq_MVOtSV4EnNyefTqolAaNqmciDxqYuVSJCQhJkQjvdTuLE9M6I-BF4hqTiUveYSXreonoDJJBSis73BgzNWvU5WgchByrl7Kd5szMEPnIgnzHFmNJuoMiL4GmmY7hS1Uo_uNA3eah_2IZjLC1fah8IQuv4h4331tHqBTKBsdj8h0RAafQjZNMfgGY6PefOW1Sw-6ZTiacLCpSrwcspX3nSEuRpy3vADmYmb6vBcssHHQbjk7wosheKDY6EewUNy7fezsF7IsG_GDIdQLAZiDQdRN9SE9WMYrjz8loyHhGxnHnuujnw2G9kkUARRqPaLXG65cY36GO33yRSW16CP_-I7g0NHEXjLOc6zk4Q-zHWavYnUv335DYfXNyl73BwOlf02odvEWu7plgfyJn46j8YuEPpPVylZQ78q9rsQUBEO6Jk_igNoItqp9cUdRV56Q5crfQVTaPdNCGn4Y18swDnjrDCFBhdOsWpjWlkvmj2s4ywxYQkg; path=/; secure; HttpOnly
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
<!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:08:07';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:08:07';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:08:07';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>


12:38:08.647 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 17; columnNumber: 36; The string "--" is not permitted within comments.
12:38:08.649 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 7913, url: https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=20, response: <!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:08:07';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:08:07';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:08:07';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>

12:42:33.535 [main] INFO  com.intuit.karate - karate.env system property was:  
12:42:35.283 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember&page=1&pageSize=20
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

12:42:46.391 [main] DEBUG com.intuit.karate - response time in milliseconds: 10672.85
1 < 500
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 63759
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 22 Oct 2024 07:12:44 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=e85aZ43ScqmGcNqWcIyDmWe4PqaS7scQZqSUea3A5XVDXueBOoevtC-UBC3J4lIKSw02IrjgP6GFFy8FgfkVJR3stv9h_KqMI7J91W4k22AvFsIv88sfAtoGcOVtTKFs93wjFRCWAgK4FdFj_8zGOSJfQ53Oy8J8tbJx0Xb1ceM2N5VCHSfBTFS8TT1FwRHoHLi31R1vGkXdQZ0CVARADX7BgFnJmXqWmI-1yevmPkkcPKEVVYI2u99YKvji3UA-yWVnW85AQTfazSWTT70T92Mni5dkgwXFLYDWS0h5ZppQ5bKDQ3loDQt6u3HHDRxKeTC6vj77DfCezP877N5AfHuKRF4CNsFXLm3nmjv8ZjcJjvQnqQzn00miDzw4tchkHxlLmF1_QBaHaH04Qs9ZguUXhYxDZ2jGO24ADnNdsgLxJdL3mo1b8MTF3VrQljubJTrrSW777fdfYSw_2Q7G9OutwP6tMPXuxhp-e05q0OQPuhJ6TKxlmQJge4APl-yoc6S8BQe5VIikNlLAjxm278YLE8paxb1KePJcmQ4Ft4ziG_imrk3OK19mUBt6o1KB-3ffB_J3tHl9DMIfo9KnYw; path=/; secure; HttpOnly
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
<!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:12:45';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:12:45';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:12:45';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>


12:42:46.422 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 17; columnNumber: 36; The string "--" is not permitted within comments.
12:42:46.425 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 10673, url: https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?MemberID=zTestMember&page=1&pageSize=20, response: <!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:12:45';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:12:45';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:12:45';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>

13:03:31.442 [main] INFO  com.intuit.karate - karate.env system property was:  
13:03:32.079 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?page=1&pageSize=20&MemberID=ztestmember1021
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

13:03:34.385 [main] DEBUG com.intuit.karate - response time in milliseconds: 1849.15
1 < 500
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 63759
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 22 Oct 2024 07:33:32 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=LY1HrvcKRDWf6Yb42BYUGTgGs3C6KPFavECMzg4FSyisrlb8aC-6wUd7uPMmsKimN4k5l--5RQVSbIphlwdPjNCpxXBnZmDWR1JqRZBcqlnIpRCqJ0CJl1tgbb5jGNKsbLWfz2ieYLa3JJWz8FN9-4ZQT2JtYULEUUmk4iontABoCbubuw0dG4gvLeaWD0ozrD6bmsejg1L4TnmLBrrBILKzp4xUOtHLCOclx7zNuYSvNM9E6OymHz0aU78Jk1WPUAqbsm2uvche6YrX878-KCnhSjNxuUQoVKj4y0Kr74nfIHy4hIMTVuM4CnnLSr-g7ZQOQMOK7WTEk6EM3TmzRlcoAvpmwC01Ub1pRwu9Xv_WjG9tZjCIlITzdOFKmWxMj8dnEFtO15crQ-6An_eLj7xDrNB1F6uVRYBMAU251q8_IsM9Add4Nawu47RZ5dbNfatVz3P3lp8JhNm-BVpwjL9vVbMp9Nk7HsTpAvo8hUR8nF2URVnDltg1JphxlDrI7ugvp4dp0MHXT8nJC5AZMdnbQC-0i2hCy9l1NziMvLTS9V-b8SYVoKNb94AKFp5VbDbf7ht46yYmGbdcuejClg; path=/; secure; HttpOnly
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
<!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:33:33';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:33:33';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:33:33';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>


13:03:34.396 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 17; columnNumber: 36; The string "--" is not permitted within comments.
13:03:34.397 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 1849, url: https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?page=1&pageSize=20&MemberID=ztestmember1021, response: <!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:33:33';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:33:33';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:33:33';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>

13:06:31.732 [main] INFO  com.intuit.karate - karate.env system property was:  
13:06:32.338 [main] DEBUG com.intuit.karate - request:
1 > GET https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?page=1&pageSize=20&MemberID=ztestmember1021
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)

13:06:34.321 [main] DEBUG com.intuit.karate - response time in milliseconds: 1534.02
1 < 500
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: no-cache, no-store
1 < Content-Length: 63759
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 22 Oct 2024 07:36:32 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=vLiI8sC3cArk_WqFTkhU12j6oaYjZhb7ELGC2zY-z5PZCWMqvxS349MalA96XpnW7zf07jQM6UbrwtHrY1wuxHg9Yu1O-OQ3-xdbpGYm1QFurse610LZYptRf6uxz8JJ85J6Tx2lmeE9hE9r9Lpg9DQXKqQwc2rJ9AOiLQH5rn_pTeTtd8a5WXzQc1KnF131s6BjheJd0TpIR7qqMs4yfM0G3NHKcaEqHUWlNn09XyKV3V24AcLBnl1GIy8MyLZLMApIDfcyc9RuK6wtjbJOt6cYYty2ALZWi_ir1hk02QXJmwsh9pXsLmQ7Fqsvuxe0kdrUjHPKeYYq-TMXh5hX8iDNH6D3NocgZVuBglOe00pZzZwJc4pxlusbrcOEtCtv-GUO5jVhEj7JyH2yZEWHz9BK1kew36q_G-vp1aoqJyP8XqgO9giSSVCj8x78weOsmFmmgA7529my9KpdyOKVc3RAY7wCcXQXoLs_rlnOZfD5-RK7GXWzTEpKko77Vdf5QPUGe4y2BxIn1RZ52w-5ST5lvyp9_GtJEWiEg17qI2yP5zm_JwC1uNUyjZJONSnyqTKL7xN4zvMRjaFI2E4GGQ; path=/; secure; HttpOnly
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
<!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:36:33';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:36:33';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:36:33';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>


13:06:34.343 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 17; columnNumber: 36; The string "--" is not permitted within comments.
13:06:34.344 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 1534, url: https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel?page=1&pageSize=20&MemberID=ztestmember1021, response: <!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en">
<!--<![endif]-->
<head>
    <!-- Basic Page Needs
      ================================================== -->
    <meta charset="utf-8">
    <title>Error - Call The Car</title>
    <meta http-equiv="refresh" content="36000;url=/Account/LogOff" />
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Mobile   Specific Meta  --
      ================================================== -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- CSS
      ================================================== -->
    <link href="/Content/cssnew?v=qgFCrENWEdGKhHLR_kshgMhtHUloFUUTJgxm90t8KOM1" rel="stylesheet"/>

    <link href="/Content/kendo/2023.1.314/css?v=ZZdxUiBZXt5FWSZf4Hn0YtoIIB54tBDUMh4dnLj4PTc1" rel="stylesheet"/>

    <!--[if lt IE 9]>
            <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
    <!-- Favicons
       ================================================== -->
    <link rel="shortcut icon" href="/Content/Images/favicon.png">
    <link rel="apple-touch-icon" href="/Content/Images/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/Content/Images/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/Content/Images/apple-touch-icon-114x114.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined">
    <!-- JS
     ================================================== -->
    
    <script src="/bundles/jquery?v=JL596WEzEYSLK79KRL4It4N63VXpRlW4A824KHlhVLc1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script src="/Scripts/kendo/2023.1.314/kendo?v=VBYb5G5puSreWSFs2V8MALj_quFotT-z4htUYnB2LLs1"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <link rel="stylesheet" href="/Content/bootstrap-iso.min.css">
    <link rel="stylesheet" href="/Content/override.css">
    <style type="text/css">
        .validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
            display: block;
        }

        .k-window-titlebar {
            position: relative;
            height: 2.1em;
        }

        /*To set red clolor of submit button*/
        input[type=submit] {
            background-color: #c12e2a;
            border: solid 1px #c12e2a;
        }
    </style>
    <script src="/Scripts/kendo/2023.1.314/jszip.min.js"></script>
</head>

<body class="sidebar">
    <div class="loader" title="Loading..">Loading. Please wait..</div>
    <span id="loadingimage" class="k-icon k-loading" style="display: none;"></span>
    <script src="/Scripts/scroll?v=ZKnsSyBmbmCHMUwLX9DefRoYVZMbqjv2XOiLZg-7hTI1"></script>

    <!--Strat Main Container-->
    <div id="body-wrapper">
        <!--Strat header-->
        
        <!--end header-->
        <!--Strat main-container-->
        <div class="main-container">

            
            <!-- Left side column. contains the logo and sidebar -->
                <aside id="sidebar" class="col-sm-3 left-panel main-sidebar align-self-end" tabindex="5000" style="overflow: hidden; outline: none;">

                    <div class="treeview headerLogo">

                        <a href="/Account/Dashboard" style="text-decoration: none;">
                            <div class="new-icon-Container" style="height: auto">
                                <img src="/Content/Images/logo-dark.svg" class="headerLogoImg">
                            </div>
                            <img class="headerLogoText" src="/Content/Images/logotextwhite.svg">
                        </a>

                    </div>
                    <hr style="width: 100%; opacity: 0.25; margin: 16px 0 !important;" />
                    <!-- sidebar: style can be found in sidebar.less -->

                    <div class="sidebar">
    <ul id="dynMenu" class="sidebar-menu">
        <li class="treeview">
            <a href="/Account/Dashboard">
                <div class="new-icon-Container">
                    <span class="material-icons">home</span>
                </div>
                <span>Home</span>
                <span class="material-icons md-14 pull-right"></span>
            </a>
        </li>
    </ul>
</div>
<script>

    function buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible) {
        console.log("building menu...");
        var menu = document.getElementById("dynMenu");
        var canList = userPermissions.map(x => x.ControllerActionName);
        var pdList = userPermissions.map(x => x.PermissionDescription);
        console.log(pdList);
        if (userType == 5 || userType == 7) {
            if (userPagePermissions.Administrator) {
                menu.innerHTML += `<li>
                <a href="/Credentials/Subcontractor/SubcontractorAccess">
                    <div class="new-icon-Container">
                        <span class="material-icons">admin_panel_settings</span>
                    </div>
                    <span>Admin</span>
                    <span class="material-icons md-14 pull-right">chevron_left</span>
                </a>

            </li>`;
            }
            if (userPagePermissions.Dispatch) {
                menu.innerHTML += `<li>
                    <a href="/Credentials/Subcontractor/SubcontractorDispatch">
                        <div class="new-icon-Container">
                            <span class="material-icons">
                                airport_shuttle
                            </span>
                        </div>
                        <span>Dispatch</span>
                        <span class="material-icons md-14 pull-right">chevron_left</span>
                    </a>
                </li>`;
            }
            if (userPagePermissions.Cliam) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Claims</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
            if (userPagePermissions.Credentialing) {
                menu.innerHTML += `<li>
    <a href="">
        <div class="new-icon-Container">
            <span class="material-icons">receipt_long</span>
        </div>
        <span>Credentialing</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
            }
        }
        if (adminList.IsClientAdmin) {
            menu.innerHTML += `<li>
            <a href="/Client/Client/ClientAccess">
                <div class="new-icon-Container">
                    <span class="material-icons">supervised_user_circle</span>
                </div>
                <span>Access</span>
            </a>
        </li>`;
        }
        if (adminList.IsFacilityAdmin) {
            menu.innerHTML += `<li>
    <a href="/Facility/Facility/Access">
        <div class="new-icon-Container">
            <span class="material-icons">supervised_user_circle</span>
        </div>
        <span>Access</span>
    </a>
</li>`;
        }
        if (pdList.filter((x) => x.startsWith("Admin")).length > 0) {
            console.log("has admin priv...");
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">admin_panel_settings</span>
            </div>
            <span>Admin</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Master")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Lookup Fields<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("Master-Designation")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Designation">Job Title</a></li>';
                }
                if (canList.includes("Master-LevelOfService")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/LevelOfService">Level Of Service</a></li>';
                }
                if (canList.includes("Master-Tag")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/Tag">Tag</a></li>';
                }
                if (canList.includes("Master-NoteCategory")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Master/NoteCategory">Note Category</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);

                var temp2 = document.createElement("li"); // Sub-menu
                temp2.innerHTML += '<a href="#">Credentialing Master<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp2 = document.createElement("ul");
                ulTemp2.classList += "treeview-menu";
                if (canList.includes("Master-InsuranceBroker")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceBroker">Insurance Broker</a></li>';
                }
                if (canList.includes("Master-InsuranceCarrier")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/InsuranceCarrier">Insurance Carrier</a></li>';
                }
                if (canList.includes("Master-VehicleServiceTask")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceTask">Vehicle Service Task</a></li>';
                }
                if (canList.includes("Master-VehicleServiceCenter")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleServiceCenter">Vehicle Service Center</a></li>';
                }
                if (canList.includes("Master-VehicleMake")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleMake">Vehicle Make</a></li>';
                }
                if (canList.includes("Master-VehicleModel")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/VehicleModel">Vehicle Model</a></li>';
                }
                if (canList.includes("Master-TrainingType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingType">Training Type</a></li>';
                }
                if (canList.includes("Master-ScreeningVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningVendor">Screening Vendor</a></li>';
                }
                if (canList.includes("Master-TrainingVendor")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/TrainingVendor">Training Vendor</a></li>';
                }
                if (canList.includes("Master-ScreeningType")) {
                    ulTemp2.innerHTML += '<li><a href="/Admin/Master/ScreeningType">Screening Type</a></li>';
                }
                temp2.appendChild(ulTemp2);
                parentUl.appendChild(temp2);

                var temp3 = document.createElement("li"); // Sub-menu
                temp3.innerHTML += '<a href="#">Rate <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp3 = document.createElement("ul");
                ulTemp3.classList += "treeview-menu";
                if (canList.includes("Master-Region")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Master-RegulatedRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedRate">Regulated Rate</a></li>';
                }
                if (canList.includes("Master-RegulatedTagRate")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/RegulatedTagRate">Regulated Tag Rate</a></li>';
                }
                if (canList.includes("Master-CostTier")) {
                    ulTemp3.innerHTML += '<li><a href="/Admin/Master/CostTier">Cost Tier</a></li>';
                }
                temp3.appendChild(ulTemp3);
                parentUl.appendChild(temp3);

                var temp4 = document.createElement("li"); // Sub-menu
                temp4.innerHTML += '<a href="#">Audit <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp4 = document.createElement("ul");
                ulTemp4.classList += "treeview-menu";
                if (canList.includes("Employee-Audit")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Master/Region">Region</a></li>';
                }
                if (canList.includes("Employee-AuditLogRead")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/AuditLogRead">Audit Read</a></li>';
                }
                if (canList.includes("Employee-MailicousActivityHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/MailicousActivityHistory">Malicious Activity</a></li>';
                }
                if (canList.includes("Employee-LoginHistory")) {
                    ulTemp4.innerHTML += '<li><a href="/Admin/Employee/LoginHistory">Login History</a></li>';
                }
                temp4.appendChild(ulTemp4);
                parentUl.appendChild(temp4);
            }
            if (canList.filter((x) => x.startsWith("Employee")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Administration <span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";

                if (canList.includes("Roles-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Roles">Role Setup</a></li>';
                }
                if (canList.includes("Permissions-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Permissions">Permissions Setup</a></li>';
                }
                if (canList.includes("Employee-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Employee">System Users</a></li><li><a href="/Admin/Employee/BulkCreate">Bulk Create</a></li><li><a href="/Admin/Employee/BulkDelete">Bulk Delete</a></li>';
                }
                if (canList.includes("Broker-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Broker">Broker</a></li>';
                }
                if (canList.includes("Scorecard-Index")) {
                    ulTemp.innerHTML += '<li><a href="/Admin/Scorecards">Scorecards</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Member")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">people</span>
        </div>
        <span>Member</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Member-MemberList")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/MemberList">Member Search</a></li>';
            }
            if (canList.includes("Member-Create")) {
                parentUl.innerHTML += '<li><a href="/Member/Member/Create">Add Member</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Facility")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">business</span>
            </div>
            <span>Facility</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Facility-Index")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility">Facility Search</a></li>';
            }
            if (canList.includes("Facility-Create")) {
                parentUl.innerHTML += '<li><a href="/Facility/Facility/Create">Add Facility</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.startsWith("Reservation")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons new-icons">event_available</span>
            </div>
            <span>Reservation</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Reservation-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation">Reservation Search</a></li>';
            }
            if (canList.includes("Reservation-ReservationOrderSearch")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/ReservationOrderSearch">Reservation Order Search</a></li>';
            }
            if (canList.includes("Reservation-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/Create">Create</a></li>';
            }
            if (canList.includes("Reservation-TripExport")) {
                parentUl.innerHTML += '<li><a href="/Reservation/Reservation/TripExport">Export Trip</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client Billing")).length > 0) {

            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
         <div class="new-icon-Container">
             <span class="material-icons new-icons">receipt_long</span>
         </div>
         <span>Billing</span>
         <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Billing-CalculateIncentive")) {
                parentUl.innerHTML += '<li><a href="/Billing/Billing/CalculateIncentive"  style=\"text-wrap: wrap;\">Calculate CCAH VIP Incentive</a></li>';
            }
            if (canList.includes("VoidClaim-AddVoidClaim") || canList.includes("VoidClaim-VoidClaimApproval") || canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Void Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("VoidClaim-AddVoidClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/AddVoidClaim">Add Void Claim</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimApproval">Void Claim Approval</a></li>';
                }
                if (canList.includes("VoidClaim-VoidClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/VoidClaim/VoidClaimCheckStatus">Void Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }
            if (canList.includes("ReplacementClaim-AddReplacementClaim") || canList.includes("ReplacementClaim-ReplacementClaimApproval") || canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Replacement Claim<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                var ulTemp = document.createElement("ul");
                ulTemp.classList += "treeview-menu";
                if (canList.includes("ReplacementClaim-AddReplacementClaim")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/AddReplacementClaim"  style=\"text-wrap: wrap;\">Add Replacement Claim</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimApproval")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimApproval" style=\"text-wrap: wrap;\">Replacement Claim Approval</a></li>';
                }
                if (canList.includes("ReplacementClaim-ReplacementClaimCheckStatus")) {
                    ulTemp.innerHTML += '<li><a href="/Billing/ReplacementClaim/ReplacementClaimCheckStatus" style=\"text-wrap: wrap;\">Replacement Claim Status</a></li>';
                }
                temp.appendChild(ulTemp);
                parentUl.appendChild(temp);
            }

            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);

        }


        if (pdList.filter((x) => x.startsWith("StandingOrder")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
        <div class="new-icon-Container">
            <span class="material-icons">update</span>
        </div>
        <span>Standing Order</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("StandingOrder-Index")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder">SO Search</a></li>';
            }
            if (canList.includes("StandingOrder-Create")) {
                parentUl.innerHTML += '<li><a href="/Reservation/StandingOrder/Create">Create</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        var tempList = pdList.filter((x) => x.startsWith("Credentials"));
        if (tempList.length > 0 && tempList != "Credentials- Dispatch") {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons">receipt_long</span>
            </div>
            <span>Credentialing</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.filter((x) => x.startsWith("Subcontractor")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Subcontractor<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Subcontractor-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor/Create">Add Subcontractor</a></li></ul>';
                }
                if (canList.includes("Subcontractor-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Subcontractor">Subcontractor Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Driver")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Driver<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Driver-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver/Create">Add Driver</a></li></ul>';
                }
                if (canList.includes("Driver-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Driver">Driver Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
            if (canList.filter((x) => x.startsWith("Vehicle")).length > 0) {
                var temp = document.createElement("li"); // Sub-menu
                temp.innerHTML += '<a href="#">Vehicle<span class="material-icons md-14 pull-right">chevron_left</span></a>';
                if (canList.includes("Vehicle-Create")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle/Create">Add Vehicle</a></li></ul>';
                }
                if (canList.includes("Vehicle-Index")) {
                    temp.innerHTML += '<ul class="treeview-menu abc"><li><a href="/Credentials/Vehicle">Vehicle Search</a></li></ul>';
                }
                parentUl.appendChild(temp);
                parentLi.appendChild(parentUl);
                menu.appendChild(parentLi);
            }
        }
        if (canList.filter((x) => x.startsWith("Subcontractor-Dispatch")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.innerHTML = `<a href="/Credentials/Subcontractor/Dispatch">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        airport_shuttle
                    </span>
                </div>
                <span>Dispatch</span>
            </a>`;
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.startsWith("Client")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons">
                        supervised_user_circle
                    </span>
                </div>
                <span>Client</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            if (canList.includes("Client-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/Client">Client Search</a></li>';
            }
            if (canList.includes("Client-Create")) {
                parentUl.innerHTML += '<li><a href="/Client/Client/Create">Create</a></li>';
            }
            if (canList.includes("MemberImport-Index")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport">Member Import</a></li>';
            }
            if (canList.includes("MemberImport-ImportHistory")) {
                parentUl.innerHTML += '<li><a href="/Client/MemberImport/ImportHistory">Import History</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Report")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
                <div class="new-icon-Container">
                    <span class="material-icons-outlined">
                        summarize
                    </span>
                </div>
                <span>Report</span>
                <span class="material-icons md-14 pull-right">chevron_left</span>
            </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +=`<li><a href="/Report/TripReport">Trips by Date and Status</a></li>`;

            if (canList.includes("TripReport-LyftReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/LyftReportIndex">Lyft Report</a></li>';
            }
            if (canList.includes("TripReport-PCSReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/PCSReportIndex">PCS Report</a></li>';
            }
            if (canList.includes("TripReport-ComplaintReportIndex")) {
                parentUl.innerHTML += '<li><a href="/Report/TripReport/ComplaintReportIndex">Complaint Report</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }
        if (pdList.filter((x) => x.includes("Finance")).length > 0) {
            var parentLi = document.createElement("li");
            parentLi.classList += "treeview";
            parentLi.innerHTML = `<a href="#">
            <div class="new-icon-Container">
                <span class="material-icons-outlined">
                    summarize
                </span>
            </div>
            <span>Finance - Vendor Invoice</span>
            <span class="material-icons md-14 pull-right">chevron_left</span>
        </a>`;
            var parentUl = document.createElement("ul");
            parentUl.classList += "treeview-menu";
            parentUl.innerHTML +='<li><a href="/Member/Finance/LoadInvoice">1) Load Invoice</a></li>';

            if (canList.includes("Finance-AdjudicateInvoice")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/AdjudicateInvoice">2) Adjudicate Invoice</a>';
            }
            if (canList.includes("Finance-PendingClaims")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/PendingClaims"  style=\"text-wrap: wrap;\">3) Resolve Pending Claims</a></li>';
            }
            if (canList.includes("Finance-GenerateEOP")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateEOP">4) Generate EOP</a></li>';
            }
            if (canList.includes("Finance-GenerateCheck")) {
                parentUl.innerHTML += '<li><a href="/Member/Finance/GenerateCheck">5) Generate Check</a></li>';
            }
            if (canList.includes("VendorClaim-VendorClaimUpdate")) {
                parentUl.innerHTML += '<li><a href="/Billing/VendorClaim/VendorClaimUpdate"  style=\"text-wrap: wrap;\">6) Update Vendor Claim Status</a></li>';
            }
            parentLi.appendChild(parentUl);
            menu.appendChild(parentLi);
        }

        if (pdList.filter((x) => x.includes("Complaint")).length > 0) {
            menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/complaints/search">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Complaints</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
        }
      if (userType == 3 && isGrievanceModuleAccessible) {
        menu.innerHTML += `<li>
    <a href="https://newapi-dev.callthecar.com/grievances">
        <div class="new-icon-Container">
            <span class="material-icons">feedback</span>
        </div>
        <span>Grievances</span>
        <span class="material-icons md-14 pull-right">chevron_left</span>
    </a>
</li>`;
    }
    window.localStorage.setItem("builtMenu", JSON.stringify(menu.innerHTML));
}

    document.addEventListener('DOMContentLoaded', function (event) {
        var builtMenu = window.localStorage.getItem("builtMenu");
        if (builtMenu != null && builtMenu != "undefined") {
            var menu = document.getElementById("dynMenu");
            menu.innerHTML = JSON.parse(builtMenu);
        } else {
            var userType = window.localStorage.getItem("userType");
            var userPermissions = window.localStorage.getItem("userPermissions");
            var adminList = window.localStorage.getItem("adminList");
            var userPagePermissions = window.localStorage.getItem("userPagePermissions");
            var isGrievanceModuleAccessible = window.localStorage.getItem("isGrievanceModuleAccessible");
            if (!userType || !userPermissions || userType == "undefined" || userPermissions == "undefined" || !adminList || adminList == "undefined" || !userPagePermissions || userPagePermissions == "undefined" || !isGrievanceModuleAccessible || isGrievanceModuleAccessible == "undefined") {
                fetch("/Account/GetSessionInfo").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        console.log(data);
                        if (data.userType) {
                            window.localStorage.setItem("userType", data.userType);
                            userType = data.userType;
                        }
                        if (data.userPermissions) {
                            window.localStorage.setItem("userPermissions", JSON.stringify(data.userPermissions));
                            userPermissions = data.userPermissions;
                        }
                        if (data.adminList) {
                            window.localStorage.setItem("adminList", JSON.stringify(data.adminList));
                            adminList = data.adminList;
                        }
                        if (data.userPagePermissions) {
                            window.localStorage.setItem("userPagePermissions", JSON.stringify(data.userPagePermissions));
                            userPagePermissions = data.userPagePermissions;
                        }
                        if (data.isGrievanceModuleAccessible) {
                            window.localStorage.setItem("isGrievanceModuleAccessible", JSON.stringify(data.isGrievanceModuleAccessible));
                            isGrievanceModuleAccessible = data.isGrievanceModuleAccessible;
                        }
                        buildMenu(userType, userPermissions, adminList, userPagePermissions, isGrievanceModuleAccessible);
                    });
            } else {

                buildMenu(userType, JSON.parse(userPermissions), JSON.parse(adminList), JSON.parse(userPagePermissions), JSON.parse(isGrievanceModuleAccessible));
            }
        }

        async function cacheStore(url) {

            try {

                // open cache
                const cache = await caches.open("mySession");

                // fetch and store response
                await cache.add(url);
                return true;

            }
            catch (err) {
                return undefined; // store failed
            }

        }
});
</script>



                    <!-- /.sidebar -->

                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button" style="text-decoration: none; margin-top: auto !important;">
                        <div class="new-icon-Container">
                            <span class="material-icons-outlined">
                                menu
                            </span>
                        </div>
                    </a>

                </aside>
            <div class="right-panel" id="right-panel">
                <nav class="navbar navbar-default" style="margin-bottom: 0;">

                    <div id="navbar-inner">
                        <!--<div class="col-lg-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search for..." id="search">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button">
                                        <span class="material-icons-outlined" style="font-size: 14px;">
                                            search
                                        </span>
                                    </button>
                                </span>
                            </div>-->
                        <!-- /input-group -->
                        <!--</div>
                        <div class="input-group">

                            <input id="search" class="form-control" type="text" placeholder="Search" data-bs-toggle="dropdown">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">
                                </button>
                            </span>

                            <ul id="searchResults" class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 94%"></ul>
                        </div>-->
                        <ul class="nav navbar-nav navbar-right" style="margin-right: 0 !important;">
                            <li>
                                <span class="navbar-text" style="margin-right: 0">hkoshti</span>
                            </li>
                            <li class="dropdown" style="margin-right: 1rem;">

                                <a class="dropdown-toggle" href="#" id="navbarDropdownMenuLink"
                                   role="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                    <img id="mePhoto" src="" class="rounded-circle" style="vertical-align: baseline;"
                                         height="24" alt="Avatar" loading="lazy" />
                                    <span class="material-icons">
                                        arrow_drop_down
                                    </span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <input type="checkbox" id="spaMode" checked onclick="setLayout()">
                                            New Layout
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" onclick="logOut()">Log Off</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                </nav>
                <div class="content-area">
                    <div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 1040">
                        <div id="toast-container" class="bootstrapiso position-absolute top-0 end-0 p-3">

                        </div>
                    </div>
                    <div class="lds-dual-ring fade" id="loading-spinner"></div>
                    <div id="spa-content">
                        <div id="body">
                            
<script type="text/javascript">
    function getUserType(){
        return MySession.UserType
    }
</script>

<hgroup>
    <h1 class="text-error">Error.</h1>
    <h2 class="text-error">An error occurred while processing your request.</h2>
    <p>Controller name: Member</p>
    <p>Action name: MemberSearchPanel</p>
    <p>Message: This request has been blocked because sensitive information could be disclosed to third party web sites when this is used in a GET request. To allow GET requests, set JsonRequestBehavior to AllowGet.</p>
</hgroup>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end main-container-->
        <div class="clearfix"></div>
        
    </div>
    <!--End Main container-->
    <div class="modal fade bootstrap-iso" id="addressModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Suggestion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="list-group" id="addressList">
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Start Kendo Notification-->
    <span id="notification"></span><script>
	kendo.syncReady(function(){jQuery("#notification").kendoNotification({"position":{"right":50,"top":50},"stacking":"down","autoHideAfter":0,"templates":[{"type":"info","templateId":"emailTemplate"},{"type":"error","templateId":"errorTemplate"},{"type":"success","templateId":"successTemplate"},{"type":"warning","templateId":"warningTemplate"}]});});
</script>

    <script id="emailTemplate" type="text/x-kendo-template">
        <div class="info">
            <i class="fa fa-info-circle fa-lg"></i>
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; color: red; font-size: 2rem;">highlight_off</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="warningTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso error">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">info</span>
            </div>
            <div class="col">
                <h5>#= title #</h5>
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <script id="successTemplate" type="text/x-kendo-template">
        <div class="bootstrap-iso notification">
        <div class="row">
            <div class="col-2 align-self-center">
                <span class="material-icons" style="vertical-align:middle; font-size: 2rem;">check_circle_outline</span>
            </div>
            <div class="col">
                <p>#= message #</p>
            </div>
        </div>
        </div>
    </script>
    <!--End Kendo Notification-->
    <script src="/Scripts/custom.js"></script>
    <script src="/Scripts/app.js"></script>
    
    <script src="/Scripts/mvcfoolproof?v=Eh3OlHJ-NJnHMr2iVDY_Pu4TnCNjk_LfeCbNU_ECPjY1"></script>

    
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyB1VOOk3D-ZX1ZbpAQtKOCZy7LnMkSmrFA&libraries=places"></script>
</body>
</html>

<script id="confirmationTemplate" type="text/x-kendo-template">
    <div class="popupMessage" style="color: red;"></div>
    <hr />
    <div class="dialog_buttons" style="float: right;">
        <input type="button" class="confirm_no k-button" value="No" />
        &nbsp;
        <input type="button" class="confirm_yes k-button" value="Yes" />
    </div>
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () { setImage(); });
    function setImage() {
        var photo = '';
        if (photo != '' && photo != null) {
            window.localStorage.setItem("mePhoto", photo);
            document.getElementById("mePhoto").src = photo;
        } else {
            var localPhoto = window.localStorage.getItem("mePhoto");
            if (localPhoto != '' && localPhoto != null) {
                document.getElementById("mePhoto").src = localPhoto;
            } else {
                document.getElementById("mePhoto").src = "/Content/Images/account_circle.svg";
            }
        }
    }

    function logOut() {
        window.localStorage.clear();
        window.location.replace("/Account/LogOff");
    }
    function setLayout() {
        $.ajax({
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SetLayout",
                    data: JSON.stringify({ layout: "old" }),
                    success: function (data) {
                        location.reload();
                    },
                    error: function () {}
                });
    }
    function showConfirmationWindow(message) {
        return showWindow('#confirmationTemplate', message)
    };

    function showWindow(template, message) {

        var dfd = new jQuery.Deferred();
        var result = false;

        $("<div id='popupWindow'></div>")
            .appendTo("body")
            .kendoWindow({
                width: "350px",
                modal: true,
                title: "Session About to Expire!",
                modal: true,
                visible: false,
                close: function (e) {
                    this.destroy();
                    dfd.resolve(result);
                }
            }).data('kendoWindow').content($(template).html()).center().open();

        $('.popupMessage').html(message);


        $('#popupWindow .confirm_no').val('Keep me signed in');
        $('#popupWindow .confirm_yes').val('Sign me out');

        $('#popupWindow .confirm_no').click(function () {
            $('#popupWindow').data('kendoWindow').close();
            //ConfirmThere = false;
            //count = 60;
        });

        $('#popupWindow .confirm_yes').click(function () {
            result = true;
            $('#popupWindow').data('kendoWindow').close();
            // ConfirmThere = false;
            // count = 60;
        });

        return dfd.promise();
    };

    const search = document.getElementById("search");
    const sResults = document.getElementById("searchResults");
    var timeout;
    if (search) {
        search.onkeyup = function () {
            if (timeout !== null) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(() => {
                let results = [];
                const userInput = this.value;
                if (userInput.length > 2) {
                    $.ajax({
                        type: "GET",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Common/Search",
                        data: { searchText: userInput },
                        success: function (data) {
                            processResults(data, userInput);
                        },
                        error: function () {}
                    });
                }
            }, 1000);
        }
    }
    var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
    var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl)
    })

    function goToMember(id) {
        var b64 = btoa(id);
        window.open(`/Member/Member/Detail?prm=${b64}`, '_blank');
    }

    function goToTrip(id) {
        var b64 = btoa(id);
        window.open(`/Reservation/Reservation/Detail/${b64}`, '_blank');
    }
    function hl(input, tmplStr) {
        var reg = new RegExp(`(${input})(.*)`, "i");
        if (reg.test(tmplStr)) {
            var arr = tmplStr.match(reg);
            return `${arr[1]}<small class="text-muted">${arr[2]}</small>`;
        } else {
            return tmplStr;
        }
    }
    function fn(dos, puTime, tripId) {
        var str = ``;
        if (dos != null) {
            var today = new Date();
            var dosP = new Date(dos);
            var puTimeFormat = new Date('1970-01-01T' + puTime + 'Z').toLocaleTimeString("en-US", {
                hour: 'numeric',
                minute: 'numeric',
                hour12: true});
            if (dosP.getDate == today.getDate) {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip today at ${puTimeFormat}.</p></a>`;
            } else {
                str = `<a class="dropdown-item" href="#" onclick="goToTrip(${tripId.toString()})"><p class="mb-1 indent">Trip on ${dosP.toLocaleDateString('en-US')} at ${puTime}.</p></a>`;
            }
        } else {
            str = `<a class="dropdown-item" href="#"><p class="mb-1 indent">No trips soon.</p></a>`;
        }
        return str;
    }
    function processResults(results, userInput) {
        var obj = JSON.parse(results);
        var children = [];
        if (obj.Members) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Members</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Members.length; i++) {
                var index = children.findIndex(x => x.innerHTML.includes(obj.Members[i].MemberId));
                if (index == -1) {
                    console.log(children);
                    var liTemp = document.createElement('li');
                    var displayName = obj.Members[i].FirstName + " " + obj.Members[i].LastName;
                    var dob = new Date(obj.Members[i].DOB);
                    var liInner = `<a class="dropdown-item" href="#" onclick="goToMember(${hl(userInput, obj.Members[i].Id.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <p class="mb-1">${hl(userInput, displayName)} ${obj.Members[i].MemberId}</p>
                                    <small class="text-muted">${hl(userInput, dob.toLocaleDateString('en-US'))}</small>
                                </div>
                                ${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                } else {
                    if (obj.Members[i].DateOfService != null) {
                        children[index].lastChild = `${fn(obj.Members[i].DateOfService, obj.Members[i].PickUpTime, obj.Members[i].TripId)}`;
                    }
                }
            }
        }
        if (obj.Trips) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Trips</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Trips.length; i++) {
                var liTemp = document.createElement('li');
                var dos = new Date(obj.Trips[i].DateOfService);
                var liInner = `<a class="dropdown-item" href="#" onclick="goToTrip(${hl(userInput, obj.Trips[i].TripId.toString())})">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Trips[i].TripNo)}</h5>
                                    <small class="text-muted">${hl(userInput, dos.toLocaleDateString('en-US'))}</small>
                                </div>
                            </a>`;
                liTemp.innerHTML = liInner;
                children.push(liTemp);
            }
        }
        if (obj.Addresses) {
            var liTemp = document.createElement('li');
            var inner = `<h6 class="dropdown-header">Addresses</h6>`;
            liTemp.innerHTML = inner;
            children.push(liTemp);
            for (let i = 0; i < obj.Addresses.length; i++) {
                if (!children.some(x => x.innerHTML.includes(obj.Addresses[i].Zipcode))) {
                    var liTemp = document.createElement('li');
                    var latterAddress = `${obj.Addresses[i].City} ${obj.Addresses[i].Zipcode}`;
                    var liInner = `<a class="dropdown-item" href="#">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">${hl(userInput, obj.Addresses[i].AddressLine1)}</h5>
                                    <small class="text-muted">${hl(userInput, latterAddress)}</small>
                                </div>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Members with this address?</p></a>
                                <a class="dropdown-item" href="#"><p class="mb-1 indent">Search for Trips going to this address?</p></a>
                            </a>`;
                    liTemp.innerHTML = liInner;
                    children.push(liTemp);
                }
            }
        }
        sResults.replaceChildren(...children);
    }


        var newAjaxDetected = false;

        $(document).ajaxComplete(function () {
            //alert("ALL current AJAX calls have completed");
            newAjaxDetected = true;

        });

        var confirmThere = false;
        var timer_PopUpTimer;
        var userSession = '240';
    var meObj = '';
    console.log(meObj);
        //alert("userSession " + userSession);

        if (userSession != "") {
            SetServerTimeInLocalStorage();
            var interval;
           // interval = setInterval('HandleUserTimeout()', 1000);//fire every 1 seconds
        }
        else {
            if (!(window.location.href.indexOf("Login") > -1 || window.location.href.indexOf("ForgotPassword") > -1 || window.location.href.indexOf("ChangePassword") > -1)) {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }
        }

        function HandleUserTimeout() {
            var userSession = '240';
            if (userSession == "") {
                window.localStorage.clear();
                window.location.href = '/Account/Logout';
            }

            SetServerTimeInLocalStorage();

            var reminingMins = GetRemainingTimeOut();
            //alert("reminingMins" + reminingMins);
            if (reminingMins == 1)
            {
                if (!confirmThere)
                {
                    count = 60;
                    ConfirmForLogout();
                    confirmThere = true;
                }
            }

        }

        function GetLeadingValues(valOfObj) {
            var valOfObject = '' + valOfObj
            var newValue = '';
            if (valOfObject.length < 2) {
                newValue = '' + '0' + valOfObject.toString();
            }
            else {
                newValue = '' + valOfObject.toString();
            }

            return newValue;
        }

        function SetServerTimeInLocalStorage() {
            var prevValue = localStorage.getItem("SesTime");
            if (prevValue == null) {
                SetNewTimeStorage();
            }
            else {
                var oldTime = prevValue;
                var newTime;

                if (newAjaxDetected) {
                    newTime = CurrentLocalTime();
                    newAjaxDetected = false;
                }
                else {
                    newTime = '10/22/2024 07:36:33';
                }

                var start = new Date(oldTime);
                var end = new Date(newTime);

                if (end > start) {
                    //check the date is latest or not before assigning.
                    localStorage.setItem("SesTime", newTime);
                }

            }
        }

        function SetNewTimeStorage() {
            var serverTime = '10/22/2024 07:36:33';
            localStorage.setItem("SesTime", serverTime);
        }

        function GetRemainingTimeOut()
        {
            var userSession = '240';
            var serverTime = localStorage.getItem("SesTime");

            var locTime=CurrentLocalTime();
            var start = new Date(serverTime);
            var end = new Date(locTime);
            var durtionUserHasNotClicked = end - start;
            var resultInMinutes = Math.round(durtionUserHasNotClicked / 60000);
            var reminingMins = userSession - resultInMinutes;
            return reminingMins;
        }

        function CurrentLocalTime()
        {
            var currentDate = new Date();
            var localTime = GetLeadingValues((currentDate.getUTCMonth() + 1)) + "/"
                            + GetLeadingValues(currentDate.getUTCDate()) + "/"
                            + currentDate.getUTCFullYear() + " "
                            + GetLeadingValues(currentDate.getUTCHours()) + ":"
                            + GetLeadingValues(currentDate.getUTCMinutes()) + ":"
                            + GetLeadingValues(currentDate.getUTCSeconds());


            return localTime;
        }

        // this function is only for testing purpos.
        function CurrentServerTime()
        {
            return serverTime = '10/22/2024 07:36:33';
        }


        function ConfirmForLogout()
        {
            timer_PopUpTimer = setInterval('timer2()', 1000); //1000 will  run it every 1 second
            $.when(showConfirmationWindow('Your session will expire in ' + '<span id="timerContent" style="display: inline;font-size: 30px;font-style: bold"></span>' + ' seconds, press Sign me out to log out ' + 'or press Keep me signed in to remain logged in.')).then(function (confirmed) {
                if (confirmed) {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }
                else {
                    $.ajax({
                        type: "Get",
                        dataType: 'html',
                        contentType: 'application/json; charset=utf-8',
                        url: "/Account/IncreaseServerTime",
                        data: { },
                        success: function (data) {
                            if (data != '') {
                                localStorage.setItem("SesTime", data);
                                confirmThere = false;
                                count = 60;
                                clearInterval(timer_PopUpTimer);
                                timer_PopUpTimer = undefined;
                            }
                            else {
                                alert("Sorry !! you have been logged out. Please login again");
                                window.localStorage.clear();
                                window.location.href = '/Account/Logout';
                            }
                    },
                    error: function () {
                    }
                });
                }
            });
        }

        var count = 60;
        function timer2() {
            count = count - 1;
            if (count == -1) {
                //this condition may never meet, but keep it for accedential event
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }


            var reminingMins = GetRemainingTimeOut();

            if (reminingMins > 1) {
                confirmThere = false;
                count = 60;
                $('#popupWindow').data('kendoWindow').close();
                clearInterval(timer_PopUpTimer);
                timer_PopUpTimer = undefined;
                return;
            }

            $("#timerContent").html(count);

            if (count == 0) {
                var reminingMins = GetRemainingTimeOut();
                if (reminingMins > 1) {
                    confirmThere = false;
                    count = 60;
                    $('#popupWindow').data('kendoWindow').close();
                    clearInterval(timer_PopUpTimer);
                    timer_PopUpTimer = undefined;
                    return;
                }
                else {
                    window.localStorage.clear();
                    window.location.href = '/Account/Logout';
                }

            }
        }

</script>

13:07:25.044 [main] INFO  com.intuit.karate - karate.env system property was:  
13:07:25.115 [main] ERROR com.intuit.karate - http request failed: request body is required for a POST, please use the 'request' keyword
13:08:58.462 [main] ERROR com.intuit.karate.core.FeatureParser - syntax error: mismatched input '{' expecting <EOF>
13:08:58.475 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: classpath:features/member/searchMember.feature - mismatched input '{' expecting <EOF>
13:09:37.999 [main] INFO  com.intuit.karate - karate.env system property was:  
13:09:38.555 [main] DEBUG com.intuit.karate - request:
1 > POST https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 57
1 > Content-Type: application/json; charset=UTF-8
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)
{"page":"1","pageSize":"20","MemberID":"ztestmember1021"}

13:09:40.133 [main] DEBUG com.intuit.karate - response time in milliseconds: 1573.35
1 < 200
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: private, s-maxage=0
1 < Content-Type: application/json; charset=utf-8
1 < Date: Tue, 22 Oct 2024 07:39:38 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=-N-KL9k83iqH5JfxkAW4XyhJiavS4fNpyFCycnoKrFtiaKh3kGFaBI4aQ8eohIOlKG2Ct-0peRcrwLGw2qXwNnnsY4Yx-aHr7xshMFiTN6MYIyPzxWgeHl0DM5eqK3os-bQ7yma1DVqJ0uxEYvUZlEJvtCfKSQe_Mr50arrFN1_5gm1FHTsmxPXyqxJ3sIz62TzSRaKc51KGRQiQfSW3rEcYXA2okOc7uuE2Lr44rRQ_R3v-WDVz8UglKnwJXmP1btjERSIfibGrGG-Jhi7F9tDeA85QsqC2qjRVKYXCASVgSLOwTQ5Sh2mY1kRHlo7UkQh7ES8SAg-PN6n8NwKaEVWoMs0kLSj4lG5h5iSdBPBtOa-h6Jz_BESsPvD71UoTZz9R42IbABgbtBSus-35zXi9V-31LGUCqqB6t8Zh2bD6J4ntc7bJPGUg3MacMqAeM20LBrb79Oz-oBsf1vm6_erFNxC5whGnBI6nylTBHU-I5AyU4nVnUIskkz5wQdxUFaUT9t7c0F-LluHAbmdNhW2J6v3pP2dGNlH0MM22yyIcADV-0xgRcM_5OQstnZhCWi1rwb-gMUNOdYcKVM1v_Q; path=/; secure; HttpOnly
1 < Vary: Accept-Encoding
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
{"Data":[{"MemberFirstName":null,"MemberLastName":null,"MemberName":"Member, Demo Test","MemberAddress":"763 Arcadia Ave , 5, Arcadia, CA- 91007","MemberFWA":false,"SearchDOB":null,"BenefitStartDate":null,"BenefitEndDate":null,"LastImportDate":null,"LastImportFileName":null,"BenefitName":null,"BrokerId":null,"ExcludedSubContractorId":0,"ExcludedSubContractorName":null,"SubContractorExclusionDate":"\/Date(-62135568000000)\/","SubContractorExcludedBy":null,"SubContractorName":null,"SubContractorReason":null,"Reason":null,"SubContractorId":0,"MemberTagid":null,"MemberTagids":0,"MemberTagName":null,"MailingAddressLine1":null,"MailingAddressLine2":null,"MailingApartment":null,"MailingCity":null,"MailingStateId":null,"Zipcode":null,"MemberNoteId":0,"MemberNoteCategoryId":0,"MemberNoteCategory":null,"MemberNoteText":null,"MemberNoteCreator":null,"MemberNoteCreationDate":"\/Date(-62135568000000)\/","Member":{"MemberMOT":null,"Id":229498,"MemberIdSearch":null,"MemberId":"ztestmember1021","InsuranceId":null,"SalutationId":0,"FirstName":null,"MiddleName":null,"LastName":null,"Name":",","DOB":null,"Age":null,"Gender":null,"MailingAddressId":0,"MailingAddress":null,"PhysicalAddressId":null,"PhysicalAddress":null,"IsPhysicalAddressSame":false,"DateOfBirth":"10/12/1959","PrimaryContactNo":"(626) 263-2074","PrimaryContactType":null,"SecondaryContactNo":null,"SecondaryContactType":null,"Email":null,"ClientId":0,"BenefitId":0,"InsurancePlanId":0,"AccountStatus":null,"Heightfeet":null,"HeightInches":null,"Height":"","Weight":null,"PreferredLevelOfServiceId":null,"PreferredSubContractorId":null,"CreatedBy":null,"CreatedDate":"\/Date(-62135568000000)\/","ModifiedBy":null,"ModifiedDate":null,"IsActive":null,"IsVip":null,"Status":"Active","ClientName":null,"Client":null,"IsAutomatedCallTextOptIn":null,"IsAutomatedEmailOptIn":null,"LOBName":null,"GroupName":null,"Pronoun":null,"PrefferedGender":null,"PlanCode":null,"HasParentalConsent":false},"Client":{"ClientId":0,"CompanyName":"zTest Health Plan","OfficeAddressId":0,"Phone":null,"Fax":null,"Email":null,"ContactPersonName":null,"ContactPersonEmail":null,"ContactPersonPhone":null,"ContactPersonMobile":null,"ContactPersonFax":null,"Logo":null,"IsActivateCountyVerification":false,"MaxOutOfCountyTravelDistance":null,"IsActiveMassTransit":false,"HealthPlanIdentifier":null,"IsAuthRequiredField":false,"IsAdvanceAuthFeature":false,"IsAuthMaskedRequiredField":false,"AuthMaskField":null,"MaxWalkingDistance":null,"MaxTravelTime":null,"CreatedBy":null,"CreatedDate":"\/Date(-62135568000000)\/","ModifiedBy":null,"ModifiedDate":"\/Date(-62135568000000)\/","IsActive":0,"IsTripExportAccess":false,"Address":null,"IsPCSEnabled":false,"IsMemberEligibilityImport":false,"CallCenterNumber":null,"IsAppLock":false,"AppLogo":null,"TaskBarpicker":null,"Headerbuttonpicker":null},"BenefitGroup":null,"Preference":null,"Address":null,"ListAddress":null,"State":null,"Status":0,"ModifiedBy":null,"LevelOfService":null,"username":null,"StateList":[{"Disabled":false,"Group":null,"Selected":false,"Text":"Alabama-AL","Value":"1"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Alaska-AK","Value":"2"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Arizona-AZ","Value":"3"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Arkansas-AR","Value":"4"},{"Disabled":false,"Group":null,"Selected":false,"Text":"California-CA","Value":"5"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Colorado-CO","Value":"6"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Connecticut-CT","Value":"7"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Delaware-DE","Value":"8"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Florida-FL","Value":"9"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Georgia-GA","Value":"10"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Hawaii-HI","Value":"11"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Idaho-ID","Value":"12"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Illinois-IL","Value":"13"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Indiana-IN","Value":"14"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Iowa-IA","Value":"15"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Kansas-KS","Value":"16"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Kentucky-KY","Value":"17"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Louisiana-LA","Value":"18"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Maine-ME","Value":"19"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Maryland-MD","Value":"20"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Massachusetts-MA","Value":"21"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Michigan-MI","Value":"22"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Minnesota-MN","Value":"23"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Mississippi-MS","Value":"24"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Missouri-MO","Value":"25"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Montana-MT","Value":"26"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Nebraska-NE","Value":"27"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Nevada-NV","Value":"28"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New Hampshire-NH","Value":"29"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New Jersey-NJ","Value":"30"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New Mexico-NM","Value":"31"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New York-NY","Value":"32"},{"Disabled":false,"Group":null,"Selected":false,"Text":"North Carolina-NC","Value":"33"},{"Disabled":false,"Group":null,"Selected":false,"Text":"North Dakota-ND","Value":"34"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Ohio-OH","Value":"35"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Oklahoma-OK","Value":"36"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Oregon-OR","Value":"37"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Pennsylvania-PA","Value":"38"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Rhode Island-RI","Value":"39"},{"Disabled":false,"Group":null,"Selected":false,"Text":"South Carolina-SC","Value":"40"},{"Disabled":false,"Group":null,"Selected":false,"Text":"South Dakota-SD","Value":"41"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Tennessee-TN","Value":"42"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Texas-TX","Value":"43"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Utah-UT","Value":"44"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Vermont-VT","Value":"45"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Virginia-VA","Value":"46"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Washington-WA","Value":"47"},{"Disabled":false,"Group":null,"Selected":false,"Text":"West Virginia-WV","Value":"48"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Wisconsin-WI","Value":"49"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Wyoming-WY","Value":"50"},{"Disabled":false,"Group":null,"Selected":false,"Text":"District of Columbia-DC","Value":"51"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Uttar Pradesh-UP","Value":"52"}],"chkCopyMailing":false,"EncryprtMemberId":null,"IsAccessToFleetModule":null,"IsAccessToEligibility":false,"InRequestedUser":null,"InMemberID":null,"InLastName":null,"InBirthDate":null,"InDateOfService":null}],"Total":1,"AggregateResults":null,"Errors":null}

17:25:23.637 [main] INFO  com.intuit.karate - karate.env system property was:  
17:25:32.350 [main] INFO  com.intuit.karate - karate.env system property was:  
17:25:32.996 [main] DEBUG com.intuit.karate - request:
1 > POST https://ccerrts-dev.callthecar.com/Member/Member/MemberSearchPanel
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 57
1 > Content-Type: application/json; charset=UTF-8
1 > Cookie: ASP.NET_SessionId=do1mfi0ql5hhsa3ht1sad2w3; .AspNet.ApplicationCookie=-7AqLoNgAiNm3AHi36YotWUeENUFiKnCcZrvxatE0Omi2BTckZphuf4t89iSGAVJV4nKFQcI3UsVFmbe2T3Xvq3x-jta0aa4d11op1sC-RZc3u5DeIwcG7RjRA2NBOYbAfxx7Gjh0hD02tmM2iyap-N1Kd4-KhT7awkHP-Z179V7UIYG-cwJjAlI7X2OjLnHppMuIkVa85cu9NO82Tq_sgV1kFGs-WytZunm8WHPxUrew2ltb0W4YNhSBQkbf_tXmHXyZORLXxJGdGjZilcGFVccPt5nX32s_93JoHwk8vQXg3ubb3bQ13RhT3midyzRyDItJ8lkr3_sPMLHypvVZaHQj8r6gwfrzmQVXNyXSSguTn2-4cSkCIhGF_4AvgGwSb3xjQ8IjToFc9YcL5QIwio8BJAUE5BgamCNCTHbvd-yUNAhHK26clV-g9Uf9lybpVOLsrV-Hx8N23l3DhKFLg5SuBMLNRET5VhcRBWfLS_-LnP35Wwy8NH27F9UAsdcLVddY9mOJDnNrXvSb7BQnFE2WoNVMqc4xgpWUzUTQIdc27RlgOmx0knnOdAVMwB1baKY-cq0FbA0NqepSt9r2g; UserDetailCookie=UserDetail=aGtvc2h0aSxRd2VydHlAMTIzLFRydWU=; __RequestVerificationToken=JJfiaYQaWrJR5bOPxMpSzlDhPO2Y2cdmarx1qQxb5DSCScTWYc5m745LO2NUM132gEPYIq7cHTihQBFx3gjlYielvuD3vuRqbHhds3zFiLE1
1 > Host: ccerrts-dev.callthecar.com
1 > User-Agent: Apache-HttpClient/4.5.12 (Java/1.8.0_202)
{"page":"1","pageSize":"20","MemberID":"ztestmember1021"}

17:25:41.753 [main] DEBUG com.intuit.karate - response time in milliseconds: 8754.13
1 < 200
1 < Access-Control-Expose-Headers: Request-Context
1 < Cache-Control: private, s-maxage=0
1 < Content-Type: application/json; charset=utf-8
1 < Date: Mon, 28 Oct 2024 11:55:41 GMT
1 < Expires: -1
1 < Pragma: no-cache
1 < Request-Context: appId=cid-v1:171f42e4-f5e8-41ef-a93a-a62d701c7013
1 < Server: Microsoft-IIS/10.0
1 < Set-Cookie: .AspNet.ApplicationCookie=w2Q_8PLY83e4e7rorrlyaWtEucFFL6A_onh59-eK8ENbQY45A44a9reWjrnJdQ-mcMlfiCzXp6qVeLe8m8AuChQhUGQ_qfwrupmnU5H4Ts2mqHAvLhsEgpO6HOKGNWJ4wxN_8ZktSRs0Kd227zhIwBJKuaxZQkVyESUYdkFZIsiA1kTPL1Yr_xNLD3F4qASaT7ZK1bQ06B7w3WB84e0uveO-Tz9174qvzhBGOwQdpRuh6D8dET0OPl-07j1Uqr8RX8WU6ziRfcslkZAxIAZDjGJw0XeMML8obmCwNYC-BRTsw2cR1LHfjhp_hB9Efc7ozWTOepPmCL214yZRW6DFlQ89Y4KA2eEno-vsi3EVBwgGpsCnz3EJxN8eivAp-cyT9FTb0Kn3VdaWhaG79c9X5pqo9I9P74hPY_HKqIGI8W1PvGM1KPPFxwaqmLVeUho3mHhrO3BrvWZ82vOqYGsMkgFlIbsJ0r70WiqTk0UMWd62xn_JcIK4fBvb_pIeMz2lqRQwdyaJVm_vPb5SdsdQCuhXVcM1sb6eyMuclwoyLPPdcoQnkgtGJ81UNuOXcT_wEXCDk4ZwU2Q5q3ZOGVrTQw; path=/; secure; HttpOnly
1 < Vary: Accept-Encoding
1 < X-AspNet-Version: 4.0.30319
1 < X-AspNetMvc-Version: 5.2
1 < X-Frame-Options: SAMEORIGIN
1 < X-Powered-By: ASP.NET
{"Data":[{"MemberFirstName":null,"MemberLastName":null,"MemberName":"Member, Demo Test","MemberAddress":"763 Arcadia Ave , 5, Arcadia, CA- 91007","MemberFWA":false,"SearchDOB":null,"BenefitStartDate":null,"BenefitEndDate":null,"LastImportDate":null,"LastImportFileName":null,"BenefitName":null,"BrokerId":null,"ExcludedSubContractorId":0,"ExcludedSubContractorName":null,"SubContractorExclusionDate":"\/Date(-62135568000000)\/","SubContractorExcludedBy":null,"SubContractorName":null,"SubContractorReason":null,"Reason":null,"SubContractorId":0,"MemberTagid":null,"MemberTagids":0,"MemberTagName":null,"MailingAddressLine1":null,"MailingAddressLine2":null,"MailingApartment":null,"MailingCity":null,"MailingStateId":null,"Zipcode":null,"MemberNoteId":0,"MemberNoteCategoryId":0,"MemberNoteCategory":null,"MemberNoteText":null,"MemberNoteCreator":null,"MemberNoteCreationDate":"\/Date(-62135568000000)\/","Member":{"MemberMOT":null,"Id":229498,"MemberIdSearch":null,"MemberId":"ztestmember1021","InsuranceId":null,"SalutationId":0,"FirstName":null,"MiddleName":null,"LastName":null,"Name":",","DOB":null,"Age":null,"Gender":null,"MailingAddressId":0,"MailingAddress":null,"PhysicalAddressId":null,"PhysicalAddress":null,"IsPhysicalAddressSame":false,"DateOfBirth":"10/12/1959","PrimaryContactNo":"(626) 263-2074","PrimaryContactType":null,"SecondaryContactNo":null,"SecondaryContactType":null,"Email":null,"ClientId":0,"BenefitId":0,"InsurancePlanId":0,"AccountStatus":null,"Heightfeet":null,"HeightInches":null,"Height":"","Weight":null,"PreferredLevelOfServiceId":null,"PreferredSubContractorId":null,"CreatedBy":null,"CreatedDate":"\/Date(-62135568000000)\/","ModifiedBy":null,"ModifiedDate":null,"IsActive":null,"IsVip":null,"Status":"Active","ClientName":null,"Client":null,"IsAutomatedCallTextOptIn":null,"IsAutomatedEmailOptIn":null,"LOBName":null,"GroupName":null,"Pronoun":null,"PrefferedGender":null,"PlanCode":null,"HasParentalConsent":false},"Client":{"ClientId":0,"CompanyName":"zTest Health Plan","OfficeAddressId":0,"Phone":null,"Fax":null,"Email":null,"ContactPersonName":null,"ContactPersonEmail":null,"ContactPersonPhone":null,"ContactPersonMobile":null,"ContactPersonFax":null,"Logo":null,"IsActivateCountyVerification":false,"MaxOutOfCountyTravelDistance":null,"IsActiveMassTransit":false,"HealthPlanIdentifier":null,"IsAuthRequiredField":false,"IsAdvanceAuthFeature":false,"IsAuthMaskedRequiredField":false,"AuthMaskField":null,"MaxWalkingDistance":null,"MaxTravelTime":null,"CreatedBy":null,"CreatedDate":"\/Date(-62135568000000)\/","ModifiedBy":null,"ModifiedDate":"\/Date(-62135568000000)\/","IsActive":0,"IsTripExportAccess":false,"Address":null,"IsPCSEnabled":false,"IsMemberEligibilityImport":false,"CallCenterNumber":null,"IsAppLock":false,"AppLogo":null,"TaskBarpicker":null,"Headerbuttonpicker":null},"BenefitGroup":null,"Preference":null,"Address":null,"ListAddress":null,"State":null,"Status":0,"ModifiedBy":null,"LevelOfService":null,"username":null,"StateList":[{"Disabled":false,"Group":null,"Selected":false,"Text":"Alabama-AL","Value":"1"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Alaska-AK","Value":"2"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Arizona-AZ","Value":"3"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Arkansas-AR","Value":"4"},{"Disabled":false,"Group":null,"Selected":false,"Text":"California-CA","Value":"5"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Colorado-CO","Value":"6"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Connecticut-CT","Value":"7"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Delaware-DE","Value":"8"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Florida-FL","Value":"9"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Georgia-GA","Value":"10"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Hawaii-HI","Value":"11"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Idaho-ID","Value":"12"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Illinois-IL","Value":"13"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Indiana-IN","Value":"14"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Iowa-IA","Value":"15"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Kansas-KS","Value":"16"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Kentucky-KY","Value":"17"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Louisiana-LA","Value":"18"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Maine-ME","Value":"19"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Maryland-MD","Value":"20"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Massachusetts-MA","Value":"21"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Michigan-MI","Value":"22"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Minnesota-MN","Value":"23"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Mississippi-MS","Value":"24"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Missouri-MO","Value":"25"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Montana-MT","Value":"26"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Nebraska-NE","Value":"27"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Nevada-NV","Value":"28"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New Hampshire-NH","Value":"29"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New Jersey-NJ","Value":"30"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New Mexico-NM","Value":"31"},{"Disabled":false,"Group":null,"Selected":false,"Text":"New York-NY","Value":"32"},{"Disabled":false,"Group":null,"Selected":false,"Text":"North Carolina-NC","Value":"33"},{"Disabled":false,"Group":null,"Selected":false,"Text":"North Dakota-ND","Value":"34"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Ohio-OH","Value":"35"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Oklahoma-OK","Value":"36"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Oregon-OR","Value":"37"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Pennsylvania-PA","Value":"38"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Rhode Island-RI","Value":"39"},{"Disabled":false,"Group":null,"Selected":false,"Text":"South Carolina-SC","Value":"40"},{"Disabled":false,"Group":null,"Selected":false,"Text":"South Dakota-SD","Value":"41"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Tennessee-TN","Value":"42"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Texas-TX","Value":"43"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Utah-UT","Value":"44"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Vermont-VT","Value":"45"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Virginia-VA","Value":"46"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Washington-WA","Value":"47"},{"Disabled":false,"Group":null,"Selected":false,"Text":"West Virginia-WV","Value":"48"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Wisconsin-WI","Value":"49"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Wyoming-WY","Value":"50"},{"Disabled":false,"Group":null,"Selected":false,"Text":"District of Columbia-DC","Value":"51"},{"Disabled":false,"Group":null,"Selected":false,"Text":"Uttar Pradesh-UP","Value":"52"}],"chkCopyMailing":false,"EncryprtMemberId":null,"IsAccessToFleetModule":null,"IsAccessToEligibility":false,"InRequestedUser":null,"InMemberID":null,"InLastName":null,"InBirthDate":null,"InDateOfService":null}],"Total":1,"AggregateResults":null,"Errors":null}

